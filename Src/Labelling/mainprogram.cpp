#include "Mesh.h"
#include <cstdlib>
#include <string>
#include <vector>
#include <iostream>

int main()
{
	// Sample Program to explain all Functionalities

	
	// First Step: Set paths to all key files generated by script using .obj Mesh 	
	std::string pathCoordinates = "D:\\GSOC-Kinect\\Characters\\GirlTest\\LabelFileGeneration\\GirlOne_BrokenMesh.coords";
	std::string pathLabels = "D:\\GSOC-Kinect\\Characters\\GirlTest\\LabelFileGeneration\\GirlOne_BrokenMesh.labels";
	std::string pathFaces = "D:\\GSOC-Kinect\\Characters\\GirlTest\\LabelFileGeneration\\GirlOne_UnbrokenMesh.faces";
	
	// Set path to the mapping file
	std::string pathMapping = "C:\\Work\\src\\Labelling\\Dependencies\\Mapping.reduce";
	
	// Create a Mesh from the .obj file
	Mesh aMesh(pathCoordinates,pathFaces,pathLabels);
	
	// Remap Mesh to get labelling of vertices of your choice
	aMesh.remapMesh(pathMapping);
	
	// fix knees to make the labelling cylinderical rather then on the front only
	aMesh.fixJoint("Left-Knee","Y");
	aMesh.fixJoint("Right-Knee","Y");
	
	// adding missing joint this way
	aMesh.addJoint("Left-Arm-Upper","Left-Arm-Lower",0.1,"Left-Elbow");
	aMesh.addJoint("Right-Arm-Upper","Right-Arm-Lower",0.1,"Right-Elbow");
	
	// adding another joint that i need for completing my representation
	aMesh.addJoint("Left-Arm-Lower","Left-Hand",0.1,"Left-Wrist");
	aMesh.addJoint("Right-Arm-Lower","Right-Hand",0.1,"Right-Wrist");
	
	// now referring to the files generated by the mhx file
	
	// set paths for these files
	std::string pathCoordinatesMHX = "D:\\GSOC-Kinect\\Characters\\GirlTest\\Mesh\\GirlOne_MHX_Mesh.coords";
	std::string pathFacesMHX = "D:\\GSOC-Kinect\\Characters\\GirlTest\\Mesh\\GirlOne_MHX_Mesh.faces";
		
	// creating an mhx mesh	
	Mesh mhxMesh(pathCoordinatesMHX,pathFacesMHX,"");				
	
	// obtaining the labels and coordinates for the .obj mesh
	std::vector< std::vector<float> > externalMeshCoordinates = aMesh.getCoordinates();
	std::vector<std::string> externalMeshLabels = aMesh.getLabels();
	
	// obtbaining labelling for the mhx mesh based on the labelling for the obj mesh
	mhxMesh.loadLabels(externalMeshCoordinates,externalMeshLabels);	
	
	// execution complete
	system("PAUSE");

}